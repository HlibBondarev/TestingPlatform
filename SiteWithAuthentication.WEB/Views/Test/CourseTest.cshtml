@using SiteWithAuthentication.WEB.Models.UserAnswerViewModel

@model IEnumerable<UserQuestionAnswersViewModel>

@{
    ViewBag.Title = ViewBag.CourseName + " (test)";
}

<h2>@ViewBag.CourseName:</h2>
<br />
<div class="btn-group col-md-12">
    @{
        int i = 0;
    }
    @foreach (var item in Model)
    {
        switch (item.AnswerType)
        {
            case "CheckBox":
                @Ajax.ActionLink((++i).ToString(), "CheckBoxQuestionAnswers", new { id = item.QuestionId }, new AjaxOptions { OnBegin = "OnBegin", UpdateTargetId = "results", LoadingElementId = "loading", LoadingElementDuration = 800 }, new { id = i, @class = "btn btn-info btn-lg", role = "button" })
                break;
            case "Text":
                @Ajax.ActionLink((++i).ToString(), "TextQuestionAnswers", new { id = item.QuestionId }, new AjaxOptions { OnBegin = "OnBegin", UpdateTargetId = "results", LoadingElementId = "loading", LoadingElementDuration = 800 }, new { id = i, @class = "btn btn-info btn-lg", role = "button" })
                break;
            case "RadioButton":
                @Ajax.ActionLink((++i).ToString(), "RadioButtonQuestionAnswers", new { id = item.QuestionId }, new AjaxOptions { OnBegin = "OnBegin", UpdateTargetId = "results", LoadingElementId = "loading", LoadingElementDuration = 800 }, new { id = i, @class = "btn btn-info btn-lg", role = "button" })
                break;
        }
    }
</div>
<div id="countdown" class="col-md-12"></div>
<div class="col-md-12 text-left">
    @Html.ActionLink("Finish test", "GetCurrentTestResults", new { id = 0 }, new { id = "finishTest", @class = "btn btn-primary btn-lg", role = "button" })
</div>

<div class="col-md-12 text-center">
    <img id="loading" src="@Url.Content("~/Content/Images/ajax-loader.gif")" style="display:none" height="30" />
</div>
<div id="results" class="col-md-12"></div>

@section scripts {
    <script src='@Url.Content("~/Scripts/jquery.unobtrusive-ajax.min.js")' type="text/javascript"></script>
    <script type="text/javascript">

        function OnBegin() {
            $("#submitButton").click();
        }

        $(document).ready(function () {
            // Set time vars.
            var period;
            var _second = 1;
            var _minute = _second * 60;
            var _hour = _minute * 60;
            var _day = _hour * 24;
            var timer;
            // Var for a button Id.
            var btnId = "";
            // Test completion flag.
            var isFinish = false;

            // Main method.
            function showRemaining(data)
            {
                period = data.period;
                if (period < 0)
                {
                    clearInterval(timer);
                    document.getElementById('countdown').innerHTML = 'Time is over!';
                    window.location.href = '/Test/GetCurrentTestResults/0';
                    return;
                }

                var days = Math.floor(period / _day);
                var hours = Math.floor((period % _day) / _hour);
                var minutes = Math.floor((period % _hour) / _minute);
                var seconds = Math.floor((period % _minute) / _second);
                if (days > 0) {
                    document.getElementById('countdown').innerHTML = days + ' days ';
                }
                else {
                    document.getElementById('countdown').innerHTML = '';
                }
                if (hours < 10) { hours = "0" + hours; }
                if (minutes < 10) { minutes = "0" + minutes; }
                if (seconds < 10) { seconds = "0" + seconds; }
                document.getElementById('countdown').innerHTML += hours + ':';
                document.getElementById('countdown').innerHTML += minutes + ':';
                document.getElementById('countdown').innerHTML += seconds;
            }

            // Set timer.
            timer = setInterval(function () { $.post('@Url.Action("GetRemainingTestPeriod")').done(showRemaining); }, 1000);

            // Methods for processing events.
            $("#finishTest").on('click', null, function () {
                isFinish = true;
                $("#submitButton").click();
                clearInterval(timer);
            })

            $('a').on('click', null, function (e) {
                btnId = e.target.id;
            })

            $(document).on('input', ".userAnswer", function (e) {
                document.getElementById(btnId).className = "btn btn-success btn-lg";
            })

            // Prevent window closing.
            function closeOrNot(e) {
                if (!isFinish) {
                    $("#submitButton").click();
                    if (!e) e = window.event;
                    e.cancelBubble = true;
                    e.returnValue = 'If you leave the page, testing will be finished!\n';
                    if (e.stopPropagation) {
                        e.stopPropagation();
                        e.preventDefault();
                    }
                }             
            }
            window.onbeforeunload = closeOrNot;

            // Save test results to DB.
            window.addEventListener("unload", function () {
                navigator.sendBeacon("/Test/SetCurrentTestResults/0");
            });

            // Prevent return to previous page.
            function removeBack() {
                history.pushState(null, null, '');
                window.addEventListener('popstate', function () {
                    history.pushState(null, null, '');
                });
            };
            removeBack();
        })
    </script>
}
